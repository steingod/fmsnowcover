#!/usr/bin/perl -w
#
# NAME:
# process-snow
#
# PURPOSE:
# To process AVHRR imagery for snow contaminated pixels.
#
# REQUIREMENTS:
# NA
#
# INPUT:
# NA
#
# OUTPUT:
# NA
#
# NOTES:
# NA
#
# BUGS:
# NA
#
# AUTHOR:
# Øystein Godøy, METNO/FOU, 27.03.2009 
#
# MODIFIED:
# NA
#
# CVS_ID:
# $Id: process-snow,v 1.8 2009-05-07 15:47:27 steingod Exp $
#

use strict;
use File::Copy;

my(@tmparr, $item, $prodmtime, $imgmtime, $updated, @f2p);
my($mycommand,$myperiod,$cryostime,$cryosdate,@mytimearr);
my $storagetime = 14*24*3600;
my $accutime = 7*24*3600;

my $fmsnowcover="$ENV{HOME}/software/fmsnowcover/src/fmsnowcover";
my $fmsnowcovercfg="$ENV{HOME}/software/fmsnowcover/etc/conf-local.cfg";
my $accusnow="$ENV{HOME}/software/fmsnowcover/src/fmaccusnow";
my $tilefile="$ENV{HOME}/software/fmsnowcover/etc/tilelist_cryorisk";

# Read the configuration file
open FH,"$fmsnowcovercfg" or die "could not open $fmsnowcovercfg";
my @fc = <FH>;
close FH;
@tmparr = grep /^IMGPATH/,@fc;
my $imgpath = (split / /,$tmparr[0])[1];
$imgpath =~ s/\n//;
@tmparr = grep /^PRODUCTPATH/,@fc;
my $prodpath = (split / /,$tmparr[0])[1];
$prodpath =~ s/\n//;
my $logfile = $prodpath."/fmsnowcover.log";
@mytimearr = gmtime(time);
$cryosdate = sprintf("_%4d%02d",$mytimearr[5]+1900,$mytimearr[4]+1);
$logfile =~ s/\.log/$cryosdate\.log/;

# Check when products last were updated
opendir DH,"$prodpath" || die "Can't connect to $prodpath\n";
my @prodfiles = readdir DH;
closedir DH;
$updated = 0;
foreach $item (@prodfiles) {
    next if ($item =~ /^\./);
    $prodmtime = (stat("$prodpath/$item"))[9];
    $updated = $prodmtime if ($prodmtime > $updated); 
}

# Find available files in the directory examined
opendir DH,"$imgpath" || die "Can't connect to $imgpath\n";
my @imgfiles = readdir(DH);
closedir DH;
die "No files found in $imgpath." if ($#imgfiles <= 1);
foreach $item (@imgfiles) {
    next unless ($item =~ /ns\.aha$|nr\.aha$/);
    $imgmtime = (stat("$imgpath/$item"))[9];
    push @f2p,$item if ($imgmtime > $updated);
}
die "No files to process." if ($#f2p <= 1);
@f2p = sort(@f2p);

# Process files
foreach $item (@f2p) {
    warn "Error while processing $item" 
	if (system("$fmsnowcover -c $fmsnowcovercfg -i $item >> $logfile") != 0);
}

# Accumulate snow products
$cryostime = time;
$myperiod = $accutime/3600.;
@mytimearr=gmtime($cryostime);
$cryosdate = sprintf("%4d%02d%02d%02d",
	$mytimearr[5]+1900,$mytimearr[4]+1,$mytimearr[3],$mytimearr[2]);
$mycommand = "$accusnow -s $prodpath -d $cryosdate -p $myperiod -o $prodpath -m $tilefile -c 0.4 >> $logfile";
if (system($mycommand)) {
    print "\nRunning $mycommand failed $!\n";
}

# Remove old files
opendir DH,"$prodpath" || die "Can't connect to $prodpath\n";
@prodfiles = readdir DH;
closedir DH;
foreach $item (@prodfiles) {
    next if ($item =~ /^\./);
    $prodmtime = (stat("$prodpath/$item"))[9];
    unlink "$prodpath/$item" if ($prodmtime < $updated-$storagetime);
}

exit;
